// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyRhSystem.Infrastructure.Persistence;

#nullable disable

namespace MyRhSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250808160902_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Companies.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Companies.UserCompany", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id")
                        .HasColumnOrder(0);

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("company_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT")
                        .HasColumnName("role");

                    b.HasKey("UserId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("user_companies");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Funcionarios.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("DataDeAdmissao")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_de_admissao");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Posicao")
                        .HasColumnType("TEXT")
                        .HasColumnName("posicao");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT")
                        .HasColumnName("sobrenome");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Payroll.FolhaDePagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("TEXT")
                        .HasColumnName("bonus");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_pagamento");

                    b.Property<decimal>("Deducoes")
                        .HasColumnType("TEXT")
                        .HasColumnName("deducoes");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionario_id");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("TEXT")
                        .HasColumnName("hora_entrada");

                    b.Property<DateTime>("HoraSaida")
                        .HasColumnType("TEXT")
                        .HasColumnName("hora_saida");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("TEXT")
                        .HasColumnName("salario_base");

                    b.Property<decimal>("SalarioLiquido")
                        .HasColumnType("TEXT")
                        .HasColumnName("salario_liquido");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("folha_de_pagamento");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Uniformes.AtribuicaoUniformes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Condicoes")
                        .HasColumnType("TEXT")
                        .HasColumnName("condicoes");

                    b.Property<DateTime?>("DataDevolução")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_devolucao");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_entrega");

                    b.Property<DateTime?>("DataRetornada")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_retornada");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("funcionario_id");

                    b.Property<int>("ItensUniformesId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("itens_uniformes_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantidade");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ItensUniformesId");

                    b.ToTable("atribuicao_uniformes");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Uniformes.ItensUniformes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("Tamanho")
                        .HasColumnType("TEXT")
                        .HasColumnName("tamanho");

                    b.Property<int>("TotalEstoque")
                        .HasColumnType("INTEGER")
                        .HasColumnName("total_estoque");

                    b.HasKey("Id");

                    b.ToTable("itens_uniformes");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Companies.UserCompany", b =>
                {
                    b.HasOne("MyRhSystem.Domain.Entities.Companies.Company", "Company")
                        .WithMany("UserCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyRhSystem.Domain.Entities.Users.User", "User")
                        .WithMany("UserCompanies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Funcionarios.Funcionario", b =>
                {
                    b.HasOne("MyRhSystem.Domain.Entities.Companies.Company", "Company")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Payroll.FolhaDePagamento", b =>
                {
                    b.HasOne("MyRhSystem.Domain.Entities.Funcionarios.Funcionario", "Funcionario")
                        .WithMany("FolhasDePagamentos")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Uniformes.AtribuicaoUniformes", b =>
                {
                    b.HasOne("MyRhSystem.Domain.Entities.Funcionarios.Funcionario", "Funcionario")
                        .WithMany("UniformAssignments")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyRhSystem.Domain.Entities.Uniformes.ItensUniformes", "ItemUniforme")
                        .WithMany("Assignments")
                        .HasForeignKey("ItensUniformesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("ItemUniforme");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Companies.Company", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("UserCompanies");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Funcionarios.Funcionario", b =>
                {
                    b.Navigation("FolhasDePagamentos");

                    b.Navigation("UniformAssignments");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Uniformes.ItensUniformes", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("MyRhSystem.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("UserCompanies");
                });
#pragma warning restore 612, 618
        }
    }
}
