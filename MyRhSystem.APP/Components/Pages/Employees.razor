@page "/employees"
@inherits EmployeesBase
@using MyRhSystem.APP.Shared.Constants

<div class="employees-page">
    <div class="d-flex align-items-center justify-content-between mb-3 gap-2">
        <div class="d-flex align-items-center gap-2">
            <i class="bi bi-people text-success fs-4"></i>
            <h3 class="page-title m-0 fw-bold">Funcionários</h3>
        </div>

        <button class="btn btn-success btn-new" @onclick="NewEmployee">
            <i class="bi bi-plus-lg me-1"></i> Novo Funcionário
        </button>
    </div>
    <!-- Header / Toolbar -->
    <div class="card shadow-sm border-0 mb-3">
        <div class="card-body py-3">
            <div class="d-flex align-items-center gap-2 flex-wrap">

                <!-- Busca -->
                <div class="input-group" style="max-width: 340px;">
                    <span class="input-group-text"><i class="bi bi-search"></i></span>
                    <input id="employees-search"
                           class="form-control"
                           type="search"
                           placeholder="Buscar funcionários..."
                           @bind="Search" @bind:event="oninput" />
                </div>

                <!-- Filtro departamento -->
                <div class="ms-1" style="min-width: 260px;">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-building"></i></span>
                        <select id="employees-dept" class="form-select" @bind="DeptFilter">
                            <option value="">Todos os departamentos</option>
                            @foreach (var dep in Departments)
                            {
                                <option value="@dep">@dep</option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Contador -->
                <div class="text-muted ms-auto me-2">
                    Total: <strong>@TotalCount</strong> funcionários
                </div>
            </div>
        </div>
    </div>

    <!-- Chips (opcional) -->
    @if (DeptCounts?.Any() == true)
    {
        <div class="d-flex flex-wrap gap-2 mb-2">
            <button class="btn btn-outline-secondary btn-sm @(string.IsNullOrEmpty(DeptFilter) ? "active" : null)"
                    @onclick="ClearDept">
                Todos <span class="badge bg-secondary ms-1">@Employees.Count</span>
            </button>

            @foreach (var kv in DeptCounts.OrderBy(k => k.Key))
            {
                var active = DeptFilter.Equals(kv.Key, StringComparison.OrdinalIgnoreCase);
                <button class="btn btn-outline-secondary btn-sm @(active ? "active" : null)"
                        @onclick="@(() => SelectDept(kv.Key))">
                    @(!string.IsNullOrWhiteSpace(kv.Key) ? kv.Key : "—")
                    <span class="badge bg-secondary ms-1">@kv.Value</span>
                </button>
            }
        </div>
    }

    <!-- Tabela -->
    @if (!Filtered.Any())
    {
        <div class="alert alert-light border d-flex align-items-center" role="alert">
            <i class="bi bi-info-circle me-2"></i>
            Nenhum funcionário encontrado.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table align-middle">
                <thead class="table-light">
                    <tr>
                        <th style="width:44px;"></th>
                        @* <th>C:\Users\suellen\Source\Repos\MyRhSystem\MyRhSystem.APP\wwwroot\img\Rhive.jpg</th> *@
                        <th>Funcionário</th>
                        <th>E-mail</th>
                        <th>Telefone</th>
                        <th>Departamento</th>
                        <th>Cargo</th>
                        <th style="width:140px;" class="text-end">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var f in Filtered)
                    {
                        <tr>
                            <!-- Avatar com iniciais -->
                            <td>
                                <div class="avatar avatar-sm">
                                    @(GetInitials(f))
                                </div>
                            </td>

                            <td class="fw-semibold">@f.Nome @f.Sobrenome</td>
                            <td class="text-muted">@f.Email</td>
                            <td class="text-muted">@f.Telefone</td>

                            <td>
                                <span class="badge badge-dept">
                                    @(string.IsNullOrWhiteSpace(f.Departamento) ? "—" : f.Departamento)
                                </span>
                            </td>

                            <td class="text-muted">@f.Cargo</td>

                            <td class="text-end">
                                <div class="btn-group btn-group-sm" role="group" aria-label="Ações">
                                    <button class="btn btn-outline-secondary"
                                            title="Visualizar"
                                            @onclick="() => ViewAsync(f)">
                                        <i class="bi bi-eye"></i>
                                    </button>

                                    <button class="btn btn-outline-primary"
                                            title="Editar"
                                            @onclick="() => EditAsync(f)">
                                        <i class="bi bi-pencil"></i>
                                    </button>

                                    <button class="btn btn-outline-danger"
                                            title="Excluir"
                                            @onclick="() => ConfirmDelete(f)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <!-- Modal Form (componente separado) -->
    @if (ShowForm && Details is not null)
    {
        <EmployeeForm Title="@FormTitle"
                      Details="Details"
                      IsViewOnly="IsViewOnly"
                      OnCancel="CloseForm"
                      OnSave="HandleSave" />
    }

    <!-- Modal de confirmação -->
    @if (ShowConfirmDelete)
    {
        <div class="modal-backdrop2" @onclick="CancelDelete"></div>
        <div class="modal2 modal2-sm" role="dialog" aria-modal="true">
            <div class="modal2-header">
                <h6 class="m-0">Excluir funcionário</h6>
                <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="CancelDelete">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="modal2-body">
                Tem certeza que deseja excluir <strong>@Details?.Nome</strong>?
            </div>
            <div class="d-flex justify-content-end gap-2 p-3 pt-0">
                <button class="btn btn-light" @onclick="CancelDelete">Cancelar</button>
                <button class="btn btn-danger" @onclick="DeleteAsync">
                    <i class="bi bi-trash me-1"></i>Excluir
                </button>
            </div>
        </div>
    }
</div>

@code {
    // Iniciais simples: primeira letra do nome + primeira do sobrenome (se houver)
    private static string GetInitials(MyRhSystem.Application.Employees.EmployeeDto f)
    {
        var n = (f?.Nome ?? "").Trim();
        var s = (f?.Sobrenome ?? "").Trim();
        var i1 = string.IsNullOrEmpty(n) ? "" : n.Substring(0, 1).ToUpperInvariant();
        var i2 = string.IsNullOrEmpty(s) ? "" : s.Substring(0, 1).ToUpperInvariant();
        return $"{i1}{i2}".PadRight(2, '•').Substring(0, 2);
    }
}
